@model SOP_IAA.Models.ContratoViewModels

@{
    ViewBag.Title = "Nuevo Contrato";
}

@using (Html.BeginForm("Create","ContratoView"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container-fluid panel-body" style="max-width:1500px">

            <div id="rootwizard">

                <!-- 1. Create the tabs themselves  -->
                <!-- data-toggle required. -->
                <ul class="nav nav-tabs" role="tablist">
                    <li><a href="#step1" role="tab" data-toggle="tab">Datos Generales</a></li>
                    <li><a href="#step2" role="tab" data-toggle="tab">Ingenieros</a></li>
                    <li><a href="#step3" role="tab" data-toggle="tab">Laboratorios</a></li>
                    <li><a href="#step4" role="tab" data-toggle="tab">Resumen</a></li>
                </ul>

                <br />
                <!-- 2. Create progress bar -->
                <!-- div class="progress" required. -->
                <!-- on div id="progressBar" class="progress" required. -->
                <div class="progress">
                    <div id="progressBar" class="progress-bar progress-bar-striped">
                        <div class="bar">
                            <span></span>
                        </div>
                    </div>
                </div>

                <!-- 3. Create a matching tab pane for each tab. Content goes within these panes -->
                <div class="tab-content">

                    <!-- Sección de datos del contrato -->
                    <div class="tab-pane active" id="step1">

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.idContratista, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idContratista", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.contrato.idContratista, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.licitacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contrato.licitacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contrato.licitacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.lineaContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contrato.lineaContrato, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contrato.lineaContrato, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.idZona, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idZona", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.contrato.idZona, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group input-group-sm">
                            @Html.LabelFor(model => model.contrato.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contrato.fechaInicio, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                                @Html.ValidationMessageFor(model => model.contrato.fechaInicio, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.plazo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contrato.plazo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contrato.plazo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contrato.lugar, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contrato.lugar, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contrato.idFondo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idFondo", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.contrato.idFondo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <!-- Sección de datos de los ingenieros -->
                    <div class="tab-pane" id="step2" style="min-height:377px">

                        <div>
                            @Html.DropDownList("idIngeniero", Model.ListIngeniero, htmlAttributes: new { @class = "form-horizontal input-sm", @id = "ddlIngenieros" })
                            <input class="btn btn-primary" type="button" id="btnAgregarIngeniero" value="Agregar Ingeniero" />
                            <br /><br />
                        </div>

                        <!-- Panel que contendrá la tabla dinámica de inggenieros -->
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Ingenieros del Proyecto
                            </div>
                            <!-- /.panel-heading -->
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table id="tbIngenieros" class="table">
                                        <thead>
                                            <tr>
                                                <th>Ingeniero</th>
                                                <th>Cargo</th>
                                                <th>Descripción</th>
                                                <th> Departamento/Empresa </th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Aqui se cargarán las filas dinámicamente con la información de los ingenieros -->
                                        </tbody>
                                    </table>
                                </div>
                                <!-- /.table-responsive -->
                            </div>
                            <!-- /.panel-body -->
                        </div>

                    </div>

                    <!-- Sección de datos de los Laboratorios -->
                    <div class="tab-pane" id="step3" style="min-height:377px">
                        <h1>Laboratorios de autocontrol y verificación</h1>
                        <p></p>
                    </div>

                    <!-- Sección de resumen del contrato -->
                    <div class="tab-pane" id="step4" style="min-height:377px">
                        <h1>Resumen del contrato a crear</h1>

                        ¿Crear el contrato con estos datos?
                    </div>

                    <!-- 4. Declare buttons used by the wizard. -->
                    <!-- "pager wizard" required. -->
                    <ul class="pager wizard">
                        <!-- These show as disabled on first tab. Add style="display:none;" to make the First button disappear when first tab.	  -->
                        <li class="first previous"><a href="#" accesskey="f">Primero</a></li>
                        <li class="previous"><a href="#" accesskey="p">Anterior</a></li>
                        <li class="last" style="display:none;"><input type="submit" value="Crear Contrato" class="btn btn-success" /></li>
                        <li class="next"><a href="#" accesskey="n">Siguiente</a></li>
                    </ul>
                </div><!-- ./tab-content -->

            </div><!-- ./rootwizard -->

        </div>

    </div> <!-- Fin del Contenedor Principal -->
    <div id="hola"></div>
}

@section Scripts {
    @Scripts.Render("~/bundles/bootstrap");
    @Scripts.Render("~/bundles/jquery");
    @*@Scripts.Render("~/Content/css");*@
    <script src="~/Scripts/(personal)bootstrap-3.2.0.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
    
    <script>
        $(document).ready(
            function () {

                // Función que le da funcionalidad al WIzard
                $('#rootwizard').bootstrapWizard({
                    onTabShow: function (tab, navigation, index) {
                        /*if (index == 1) {
                            $.ajax({
                                url: '/ingeniero/Create',
                                contentType: 'application/html; charset=utf-8',
                                type: 'GET',
                                datatype:'html'
                            })
                            .success(function(result){
                                $('#hola').html(result);
                            })
                            .error(function (xhr, status) {
                                alert(status)
                            })
                        }*/
                        // Dynamically change percentage completion on progress bar
                        var tabCount = navigation.find('li').length;
                        var current = index + 1;
                        var percentDone = (current / tabCount) * 100;
                        $('#rootwizard').find('#progressBar').css({ width: percentDone + '%' });

                        // Optional: Show Done button when on last tab;
                        // It is invisible by default.
                        $('#rootwizard').find('.last').toggle(current >= tabCount);

                        // Optional: Hide Next button if on last tab;
                        // otherwise it shows but is disabled
                        $('#rootwizard').find('.next').toggle(current < tabCount);
                    },
                    onTabClick: function (tab, navigation, index) {
                        @*alert('Utilice los botones de Siguiente, Anterior para desplazarse');*@
                        return false;
                    }
                });

                // Función del DatePicker en los campos de Fecha
                $(function () {
                    $("#datepicker").datepicker({ dateFormat: 'dd-mm-yy' });
                });
                $(function ($) {
                    $.datepicker.regional['es'] = {
                        closeText: 'Cerrar',
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        currentText: 'Hoy',
                        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                        weekHeader: 'Sm',
                        dateFormat: 'dd/mm/yy',
                        firstDay: 1,
                        isRTL: false,
                        showMonthAfterYear: false,
                        yearSuffix: ''
                    };
                    $.datepicker.setDefaults($.datepicker.regional['es']);
                });

                // Función que permite agregar una fila con los detalles del ingeniero seleccionado en la sección Ingenieros del Wizard
                $('#btnAgregarIngeniero').click(function () {
                    var dd = document.getElementById('ddlIngenieros')
                    var _id = dd.options[dd.selectedIndex].value;

                    // Este ajax se realiza una acción de cobtrolador donde envía el id del ingeniero a buscar y recibe como retorno un JSON con los detalles del Ingeniero
                    $.ajax({
                        url: '/ContratoView/IngenieroDetalles/',
                        type: "GET",
                        dataType: "json",
                        data: {
                            id: _id
                        },

                        success: function (data) {
                            var json = $.parseJSON(data);
                            var fila = '<tr id='+json.persona.id+'><td>' + json.persona.nombre + ' ' + json.persona.apellido1 + ' ' + json.persona.apellido2 + '</td> ';

                            fila += '<td>' + json.rol + '</td>';
                            fila += '<td>' + json.descripcion + '</td>';
                            fila += '<td>' + json.departamento + '</td>';
                            fila += '<td> <button class="remove btn btn-danger" onclick=" eliminar(' + json.persona.id + ')">Quitar Ingeniero</button> </td></tr>';
                            $('#tbIngenieros > tbody:last').append(fila);

                            $("#ddlIngenieros option:selected").remove();

                        },
                        error: function (xhr, status) {
                            alert(status);
                        }
                    })
                });

                // Función que permite quitar una fila con los detalles del ingeniero seleccionado en la sección Ingenieros del Wizard
                $(document).on("click", "#tbIngenieros button.remove", function () {
                    $(this).parents("tr").remove();
                });

            });

        function eliminar(_id) {
            $.ajax({
                url: '/ContratoView/IngenieroDetalles/',
                type: "GET",
                dataType: "json",
                data: {
                    id: _id
                },

                success: function (data) {
                    var json = $.parseJSON(data);
                    $("<option value=" + json.persona.id + ">"+json.persona.nombre+" "+ json.persona.apellido1+" "+json.persona.apellido2+"</option>").appendTo("#ddlIngenieros");
                },
                error: function (xhr, status) {
                    alert(status);
                }
            })
        }
    </script>
}
