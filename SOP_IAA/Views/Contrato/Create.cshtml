@model SOP_IAA_DAL.Contrato

@{
    ViewBag.Title = "Nuevo Contrato";
}

<h2>Nuevo Contrato</h2>
<div class="col-md-offset-11 col-md-10">
    @Html.ActionLink("Atrás", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid panel-body" style="max-width:1500px">

        <div id="rootwizard">

            <!-- 1. Create the tabs themselves  -->
            <!-- data-toggle required. -->
            <ul class="nav nav-tabs" role="tablist">
                <li><a href="#step1" role="tab" data-toggle="tab">Datos Generales</a></li>
                <li><a href="#step2" role="tab" data-toggle="tab">Ingenieros</a></li>
                <li><a href="#step3" role="tab" data-toggle="tab">Laboratorios</a></li>
                <li><a href="#step4" role="tab" data-toggle="tab">Resumen</a></li>
            </ul>

            <br />
            <!-- 2. Create progress bar -->
            <!-- div class="progress" required. -->
            <!-- on div id="progressBar" class="progress" required. -->
            <div class="progress">
                <div id="progressBar" class="progress-bar progress-bar-striped">
                    <div class="bar">
                        <span></span>
                    </div>
                </div>
            </div>

            <!-- 3. Create a matching tab pane for each tab. Content goes within these panes -->
            <div class="tab-content">

                <!-- Sección de datos del contrato -->
                <div class="tab-pane active" id="step1">

                    <div class="form-group">
                        @Html.LabelFor(model => model.idContratista, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idContratista", null, htmlAttributes: new { @class = "form-control", @id = "ddlIdContratista" })
                            @Html.ValidationMessageFor(model => model.idContratista, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.licitacion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.licitacion, new { htmlAttributes = new { @class = "form-control", @id = "txtLicitacion", autofocus = "" } })
                            @Html.ValidationMessageFor(model => model.licitacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.lineaContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lineaContrato, new { htmlAttributes = new { @class = "form-control", @id = "txtLineaContrato" } })
                            @Html.ValidationMessageFor(model => model.lineaContrato, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idZona, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idZona", null, htmlAttributes: new { @class = "form-control", @id = "ddlIdZona" })
                            @Html.ValidationMessageFor(model => model.idZona, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group input-group-sm">
                        @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaInicio" } })
                            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.plazo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.plazo, new { htmlAttributes = new { @class = "form-control", @id = "txtPlazo" } })
                            @Html.ValidationMessageFor(model => model.plazo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lugar, new { htmlAttributes = new { @class = "form-control", @id = "txtLugar" } })
                            @Html.ValidationMessageFor(model => model.lugar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idFondo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idFondo", null, htmlAttributes: new { @class = "form-control", @id = "ddlIdFondo" })
                            @Html.ValidationMessageFor(model => model.idFondo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Sección de datos de los ingenieros -->
                <div class="tab-pane" id="step2" style="min-height:377px">

                    <div>
                        @Html.DropDownList("idIngeniero", null, htmlAttributes: new { @class = "form-horizontal input-sm", @id = "ddlIngenieros" })
                        <input class="btn btn-primary" type="button" id="btnAgregarIngeniero" value="Agregar Ingeniero" />
                        <br /><br />
                    </div>

                    <!-- Panel que contendrá la tabla dinámica de ingenieros -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Ingenieros del Proyecto
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table id="tbIngenieros" class="table">
                                    <thead>
                                        <tr>
                                            <th>Ingeniero</th>
                                            <th>Cargo</th>
                                            <th>Descripción</th>
                                            <th> Departamento/Empresa </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Aqui se cargarán las filas dinámicamente con la información de los ingenieros -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- /.table-responsive -->
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>

                <!-- Sección de datos de los Laboratorios -->
                <div class="tab-pane" id="step3" style="min-height:377px">
                    <div>
                        @Html.DropDownList("idLaboratorio", null, htmlAttributes: new { @class = "form-horizontal input-sm", @id = "ddlLaboratorios" })
                        <input class="btn btn-primary" type="button" id="btnAgregarLaboratorio" value="Agregar Laboratorio" />
                        <br /><br />
                    </div>

                    <!-- Panel que contendrá la tabla dinámica de laboratorios -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Laboratorios
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table id="tbLaboratorios" class="table">
                                    <thead>
                                        <tr>
                                            <th>Nombre</th>
                                            <th>Tipo</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Aqui se cargarán las filas dinámicamente con la información de los ingenieros -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- /.table-responsive -->
                        </div>
                        <!-- /.panel-body -->
                    </div>
                </div>

                <!-- Sección de resumen del contrato -->
                <div class="tab-pane" id="step4" style="min-height:377px">
                    <h1>Resumen del contrato a crear</h1>

                    ¿Crear el contrato con estos datos?
                </div>

                <!-- 4. Declare buttons used by the wizard. -->
                <!-- "pager wizard" required. -->
                <ul class="pager wizard">
                    <!-- These show as disabled on first tab. Add style="display:none;" to make the First button disappear when first tab.	  -->
                    <li class="first previous"><a href="#" accesskey="f">Primero</a></li>
                    <li class="previous"><a href="#" accesskey="p">Anterior</a></li>
                    <li class="last" style="display:none;"><input type="button" onclick="CrearContrato()" value="Crear Contrato" class="btn btn-success" /></li>
                    <li class="next"><a href="#" accesskey="n">Siguiente</a></li>
                </ul>
            </div><!-- ./tab-content -->

        </div><!-- ./rootwizard -->
    </div> <!-- Fin del Contenedor Principal -->

}

@section Scripts {
    @Scripts.Render("~/bundles/bootstrap");
    @Scripts.Render("~/bundles/jquery");
    <script src="~/Scripts/(personal)bootstrap-3.2.0.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">

    <script>
        // Array que contendrá los id de los ingenieros del proyecto
        var ingenieros = [];

        // Array que contendrá los id de los laboratorios del proyecto
        var laboratorios = [];

        $(document).ready(

            function () {
                // Función que le da funcionalidad al Wizard
                $('#rootwizard').bootstrapWizard({
                    onTabShow: function (tab, navigation, index) {
                        // Dynamically change percentage completion on progress bar
                        var tabCount = navigation.find('li').length;
                        var current = index + 1;
                        var percentDone = (current / tabCount) * 100;
                        $('#rootwizard').find('#progressBar').css({ width: percentDone + '%' });

                        // Optional: Show Done button when on last tab;
                        // It is invisible by default.
                        $('#rootwizard').find('.last').toggle(current >= tabCount);

                        // Optional: Hide Next button if on last tab;
                        // otherwise it shows but is disabled
                        $('#rootwizard').find('.next').toggle(current < tabCount);
                    },
                    onTabClick: function (tab, navigation, index) {
                        @*alert('Utilice los botones de Siguiente, Anterior para desplazarse');*@
                        return false;
                    }
                });

                // Función del DatePicker en los campos de Fecha
                $(function () {
                    $("#txtFechaInicio").datepicker({ dateFormat: 'mm/dd/yy' });
                });
                $(function ($) {
                    $.datepicker.regional['es'] = {
                        closeText: 'Cerrar',
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        currentText: 'Hoy',
                        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                        weekHeader: 'Sm',
                        dateFormat: 'dd/mm/yy',
                        firstDay: 1,
                        isRTL: false,
                        showMonthAfterYear: false,
                        yearSuffix: ''
                    };
                    $.datepicker.setDefaults($.datepicker.regional['es']);
                });

                // Función que permite agregar una fila con los detalles del ingeniero seleccionado en la sección Ingenieros del Wizard
                $('#btnAgregarIngeniero').click(function () {
                    var dd = document.getElementById('ddlIngenieros')
                    var _id = dd.options[dd.selectedIndex].value;

                    // Este ajax se realiza una acción de cobtrolador donde envía el id del ingeniero a buscar y recibe como retorno un JSON con los detalles del Ingeniero
                    $.ajax({
                        url: '/ContratoView/IngenieroDetalles/',
                        type: "GET",
                        dataType: "json",
                        data: {
                            id: _id
                        },
                        success: function (data) {
                            var json = $.parseJSON(data);
                            ingenieros.push(_id.toString());


                            // Impresion del json devuelto por el controller
                            //console.log(data);




                            var fila = '<tr id=' + json.persona.id + '><td>' + json.persona.nombre + ' ' + json.persona.apellido1 + ' ' + json.persona.apellido2 + '</td> ';
                            fila += '<td>' + json.rol + '</td>';
                            fila += '<td>' + json.descripcion + '</td>';
                            fila += '<td>' + json.departamento + '</td>';
                            fila += '<td> <button class="remove btn btn-danger" onclick=" eliminarIngeniero(' + json.persona.id + ')">Quitar Ingeniero</button> </td></tr>';

                            //Agrega el ingeniero a la tabla htlm
                            $('#tbIngenieros > tbody:last').append(fila);

                            //Elimina el ingeniero del dropdownlist
                            $("#ddlIngenieros option:selected").remove();

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    })
                });

                $('#btnAgregarLaboratorio').click(function () {
                    var dd = document.getElementById('ddlLaboratorios')
                    var _id = dd.options[dd.selectedIndex].value;

                    // Este ajax se realiza una acción de cobtrolador donde envía el id del laboratorio a buscar y recibe como retorno un JSON con los detalles del laboratorio
                    $.ajax({
                        url: '/ContratoView/LaboratorioDetalles/',
                        type: "GET",
                        dataType: "json",
                        data: {
                            id: _id
                        },

                        success: function (data) {
                            var json = $.parseJSON(data);
                            laboratorios.push(_id.toString());
                            //console.log("array -> " + laboratorios.toString());

                            var fila = '<tr id=' + json.id + '><td>' + json.nombre + '</td> ';
                            fila += '<td>' + json.tipo + '</td>';
                            fila += '<td> <button class="remove btn btn-danger" onclick=" eliminarLaboratorio(' + json.id + ')">Quitar Laboratorio</button> </td></tr>';

                            //Agrega el ingeniero a la tabla htlm
                            $('#tbLaboratorios > tbody:last').append(fila);

                            //Elimina el ingeniero del dropdownlist
                            $("#ddlLaboratorios option:selected").remove();

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    })
                });

                // Función que permite quitar una fila con los detalles del ingeniero seleccionado en la sección Ingenieros del Wizard
                $(document).on("click", "#tbIngenieros button.remove", function () {
                    $(this).parents("tr").remove();
                });

                // Función que permite quitar una fila con los detalles del laboratorio seleccionado en la sección Laboratorios del Wizard
                $(document).on("click", "#tbLaboratorios button.remove", function () {
                    $(this).parents("tr").remove();
                });

            });


        function eliminarIngeniero(_id) {
            $.ajax({
                url: '/ContratoView/IngenieroDetalles/',
                type: "GET",
                dataType: "json",
                data: {
                    id: _id
                },
                success: function (data) {
                    var json = $.parseJSON(data);
                    //console.log("id ->" + _id);
                    //var index = ingenieros.indexOf(_id);
                    //console.log(index);
                    for (var i = ingenieros.length - 1; i >= 0; i--) {
                        if (ingenieros[i] == _id) {
                            ingenieros.splice(i, 1);
                        }
                    }
                    // ingenieros.splice(ingenieros.indexOf(_id), 1);
                    $("<option value=" + json.persona.id + ">" + json.persona.nombre + " " + json.persona.apellido1 + " " + json.persona.apellido2 + "</option>").appendTo("#ddlIngenieros");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            })
        }

        function eliminarLaboratorio(_id) {
            $.ajax({
                url: '/ContratoView/LaboratorioDetalles/',
                type: "GET",
                dataType: "json",
                data: {
                    id: _id
                },
                success: function (data) {
                    var json = $.parseJSON(data);
                    console.log("id ->" + _id);
                    //var index = ingenieros.indexOf(_id);
                    //console.log(index);
                    for (var i = laboratorios.length - 1; i >= 0; i--) {
                        if (laboratorios[i] == _id) {
                            laboratorios.splice(i, 1);
                        }
                    }
                    // ingenieros.splice(ingenieros.indexOf(_id), 1);
                    $("<option value=" + json.id + ">" + json.nombre + "</option>").appendTo("#ddlLaboratorios");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            })
        }

        // Toma los datos generales, los ingenieros y laboratorios, forma un json con ellos y los envía al controlador para realizar la inserción a la base de datos
        function CrearContrato() {

            var _idContratista = document.getElementById('ddlIdContratista').options[document.getElementById('ddlIdContratista').selectedIndex].value;
            var _licitacion = document.getElementById('txtLicitacion').value;
            var _lineacontrato = document.getElementById('txtLineaContrato').value;
            var _idZona = document.getElementById('ddlIdZona').options[document.getElementById('ddlIdZona').selectedIndex].value;
            var _FechaInicio = document.getElementById('txtFechaInicio').value;
            var _Plazo = document.getElementById('txtPlazo').value;
            var _Lugar = document.getElementById('txtLugar').value;
            var _idFondo = _idContratista = document.getElementById('ddlIdFondo').options[document.getElementById('ddlIdFondo').selectedIndex].value;

            var jsonDatosContrato = { 'idContratista': _idContratista, 'licitacion': _licitacion, 'lineaContrato': _lineacontrato, 'idZona': _idZona, 'fechaInicio': _FechaInicio, 'plazo': _Plazo, 'lugar': _Lugar, 'idFondo': _idFondo };
            var jsonDatosLaboratorios = { "Laboratorios": laboratorios };
            var jsonDatosIngenieros = { "Ingenieros": ingenieros };

            $.post("/Contrato/Create", {
                jsonContrato: $.toJSON(jsonDatosContrato),
                jsonLaboratorios: $.toJSON(jsonDatosLaboratorios),
                jsonIngenieros: $.toJSON(jsonDatosIngenieros)
            },
                function (data, textStatus) {
                    if (textStatus != "success") {
                        alert("Error al agregar el contrato");
                    }
                    else {
                        window.location.href = "/Contrato/Index";
                        return false;
                    }
                }
                );
        }

</script>

}
