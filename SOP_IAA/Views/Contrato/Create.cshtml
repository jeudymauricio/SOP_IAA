@model SOP_IAA_DAL.Contrato

@{
    ViewBag.Title = "Nuevo Contrato";
}

<h2>Nuevo Contrato</h2>
<div class="col-md-offset-11 col-md-10">
    @Html.ActionLink("Atrás", "Index")
</div>
<!--
<div class="progress" style="overflow:inherit">
    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 45%;overflow:inherit">
    </div>
</div>
    -->
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="step active">
            <h4></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.idContratista, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idContratista", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idContratista, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.licitacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.licitacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.licitacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lineaContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lineaContrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lineaContrato, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idZona, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idZona", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idZona, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.plazo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.plazo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.plazo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lugar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lugar, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idFondo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idFondo", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idFondo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear Contrato" class="btn btn btn-success" />
                </div>
            </div>
        </div>


        <div class="step" style="display:none">
            Persona
        </div>


        <div class="step" style="display:none">
            Ingeniero
        </div>

        <input type="button" class="prev btn btn-warning btn-lg" style="display: none" value="Anterior" />
        <input type="button" class="next btn btn-primary btn-lg" value="Siguiente" />
    </div>

   
    
}



@section Scripts {
    @Scripts.Render("~/bundles/bootstrap");
    @Scripts.Render("~/bundles/jquery")
      <script type="text/javascript">
        $(function() {
            $('.form-horizontal .prev').click(function () {
                var wizard = $(this).parent('.form-horizontal');
                var $bar = $('.progress');

                $('.step.active', wizard).hide();

                var currentStep = $('.step.active', wizard);
                currentStep.hide();
                currentStep.removeClass('active');

                var newStep = currentStep.prev('.step', wizard);
                newStep.addClass('active');
                newStep.show();

                //$(".progress").css("width", "40%");

                if ($('.step:first', wizard)[0] == newStep[0]) {
                    $(this).hide();
                }
                $('.next', wizard).show();
            });

            $('.form-horizontal .next').click(function () {
                var wizard = $(this).parent('.form-horizontal');
                var $bar = $('.progress');

                $('.step.active', wizard).hide();

                $bar.width($bar.width() + 40);

                var currentStep = $('.step.active', wizard);
                currentStep.hide();
                currentStep.removeClass('active');

                var newStep = currentStep.next('.step', wizard);
                newStep.addClass('active');
                newStep.show();

                if ($('.step:last', wizard)[0] == newStep[0]) {
                    $(this).hide();
                }

                $('.prev', wizard).show();
            });
        });
</script>
   
}
