@model SOP_IAA_DAL.boleta

@{
    ViewBag.Title = "Agregar";
}

<h2>Agregar Boleta</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "formCreate", id = "formCreate" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="container-fluid panel-body" style="max-width:1500px">

            @Html.HiddenFor(model => model.idContrato)

            <div id="rootwizard">

                <!-- 1. Create the tabs themselves  -->
                <!-- data-toggle required. -->
                <ul class="nav nav-tabs" role="tablist">
                    <li><a href="#step1" role="tab" data-toggle="tab">Datos Generales</a></li>
                    <li><a href="#step2" role="tab" data-toggle="tab">Items</a></li>
                </ul>

                <br />
                <!-- 2. Create progress bar -->
                <!-- div class="progress" required. -->
                <!-- on div id="progressBar" class="progress" required. -->
                <div class="progress progress-striped active">
                    <div id="progressBar" class="progress-bar progress-bar-striped" role="progressbar">
                        <div class="bar">
                            <span></span>
                        </div>
                    </div>
                </div>

                <!-- 3. Create a matching tab pane for each tab. Content goes within these panes -->
                <div class="tab-content">

                    <!-- Esto despliega los mensajes de error adjuntados al modelo en el controlador (en caso de haber errores al realizar el POST)-->
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <!-- Sección de datos de boleta -->
                    <div class="tab-pane active" id="step1">
                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroBoleta, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroBoleta, new { htmlAttributes = new { @class = "form-control", @Autofocus = true, @Value = "" } })
                                @Html.ValidationMessageFor(model => model.numeroBoleta, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.idFondo, null, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.DropDownList("idFondo", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idFondo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.idRuta, null, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @{
                                    // Se pregunta si los proyectos estrcuturas vienen vacíos
                                    if (Enumerable.Count(ViewBag.idProyecto_Estructura) < 1)
                                    {
                                        // Si están vacíos entonces se desactiva el dropdown
                                        var items = new List<SelectListItem>()
                                        {
                                            new SelectListItem {Text = "--- Sin Rutas ---", Value = "-1"}
                                        };

                                        @Html.DropDownList("idRuta", items, new { @class = "form-control", @id = "ddlRuta", @disabled = "disabled"});
                                    }
                                    else
                                    {
                                        // Sí la lista contiene elementos se cargan al dropdown
                                        @Html.DropDownList("idRuta", null, htmlAttributes: new { @class = "form-control", @id = "ddlRuta" })
                                    }
                                }
                                
                                @Html.ValidationMessageFor(model => model.idRuta, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.idInspector, null, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.DropDownList("idInspector", null, htmlAttributes: new { @class = "form-control", @id = "ddlInpectores" })
                                @Html.ValidationMessageFor(model => model.idInspector, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control", @Value = "", @id = "txtFecha" } })
                                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.seccionControl, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.seccionControl, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                                @Html.ValidationMessageFor(model => model.seccionControl, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.estacionamientoInicial, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.estacionamientoInicial, new { htmlAttributes = new { @class = "form-control", @id = "txtEstInicial", @Value = "" } })
                                @Html.ValidationMessageFor(model => model.estacionamientoInicial, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.estacionamientoFinal, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.estacionamientoFinal, new { htmlAttributes = new { @class = "form-control", @id = "txtEstFinal", @Value = "" } })
                                @Html.ValidationMessageFor(model => model.estacionamientoFinal, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.periodo, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.periodo, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                                @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.idProyecto_Estructura, null, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @{
                                    // Se pregunta si los proyectos estrcuturas vienen vacíos
                                    if (Enumerable.Count(ViewBag.idProyecto_Estructura) < 1)
                                    {
                                        // Si están vacíos entonces se desactiva el dropdown
                                        var items = new List<SelectListItem>()
                                        {
                                            new SelectListItem {Text = "--- Sin Proyectos/Estructuras ---", Value = "-1"}
                                        };

                                        @Html.DropDownList("idProyecto_Estructura", items, new { @class = "form-control", @id = "ddlRuta", @disabled = "disabled" });
                                    }
                                    else
                                    {
                                        // Sí la lista contiene elementos se cargan al dropdown
                                        @Html.DropDownList("idProyecto_Estructura", null, htmlAttributes: new { @class = "form-control", @id = "ddlProyectoEstructura" });
                                    }
                                }
                                @Html.ValidationMessageFor(model => model.idProyecto_Estructura, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.observaciones, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.observaciones, new { htmlAttributes = new { @class = "form-control", @placeholder = "Max 150 caracteres", @Value = "" } })
                                @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <!-- Sección de datos de los items -->
                    <div class="tab-pane" id="step2" style="min-height:377px">
                        <div>
                            @Html.DropDownList("idItem", null, htmlAttributes: new { @class = "input", @id = "ddlItems" })
                            <input class="btn btn-primary" type="button" id="btnAgregarItem" value="Agregar Ítem" />
                            <br /><br />
                        </div>

                        <!-- Panel que contendrá la tabla dinámica de ítems -->
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Items Inspeccionados
                            </div>
                            <!-- /.panel-heading -->
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table id="tbItems" class="table">
                                        <thead>
                                            <tr>
                                                <th>Item</th>
                                                <th style="text-align:center">Descripción</th>
                                                <th style="text-align:center">Unidad de Medida</th>
                                                <th style="text-align:right">Precio a la fecha</th>
                                                <th style="text-align:right">Cantidad</th>
                                                <th style="text-align:right">Costo Total</th>
                                                <th style="text-align:right">Redimientos</th>
                                                <th style="text-align:center"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Aqui se cargarán las filas dinámicamente con la información de los ítems -->
                                        </tbody>
                                    </table>
                                </div>
                                <!-- /.table-responsive -->
                            </div>
                            <!-- /.panel-body -->
                        </div>
                        <!-- /.panel-default -->
                    </div>

                    <!-- 4. Declare buttons used by the wizard. -->
                    <!-- "pager wizard" required. -->
                    <ul class="pager wizard">
                        <!-- These show as disabled on first tab. Add style="display:none;" to make the First button disappear when first tab.	  -->
                        <li class="first previous"><a href="#" accesskey="f">Primero</a></li>
                        <li class="previous"><a href="#" accesskey="p">Anterior</a></li>
                        <li class="next"><a href="#" accesskey="n">Siguiente</a></li>
                        <li class="last" style="display:none;"><input type="submit" value="Crear Boleta" class="btn btn-success" /></li>
                    </ul>
                </div><!-- ./tab-content -->

            </div>

        </div> <!-- /.container fluid -->
    </div> <!-- /.form horizontal -->
}

<div>
    @Html.ActionLink("Atrás", "Index", new { idContrato = Model.idContrato })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Función para realizar operaciones con decimales -->
    <script src="~/Scripts/API Decimales/decimal.js"></script>
    <script src="~/Scripts/Boleta/CreateMethods.js"></script>
    <script src="~/Scripts/jquery-ui-1.11.1.js"></script>
    <link rel="stylesheet" href="~/Content/AutoCompleteComboBox.css">
    <script src="~/Scripts/AutoCompleteComboBox.js"></script>
    <link rel="stylesheet" href="~/Content/jquery.dataTables.min.css" />
    <script src="~/Scripts/plugins/dataTables/jquery.dataTables.min.js"></script>

}
